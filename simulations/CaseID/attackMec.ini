# this config file is not really used

[General]
network = AttackMec
description = "Basic Configuration"
sim-time-limit = ${simtime=6000s} # add options to sim-time like this: 60s,7200s,120s etc

############### Statistics ##################
output-scalar-file-append = false
**.routingRecorder.enabled = false
record-eventlog = false

**.servingCell*.vector-recording = true
**.servedUE*.vector-recording = true
**.cellIdNodeIdCouple*.vector-recording = true
**.simNodeIds*.vector-recording = true
**.coord*.vector-recording = true

**.scalar-recording = true
**.vector-recording = true	

# include itervars in the output file names 
output-scalar-file = ./results/benign.sca 
output-vector-file = ./results/benign.vec

############### Network configuration ##################
*.configurator.config = xmldoc("config/demo.xml") 

############### Internet Cloud config ##############
**.internetCloud.ipv4Delayer.config = xmldoc("config/Internetcloud_config_test.xml")

############### General PHY parameters ##############
**.downlink_interference = true
**.uplink_interference = true
#**.ueTxPower = 26
#**.eNodeBTxPower = 46
**.targetBler = 0.01
**.blerShift = 5  
#**.fbPeriod = 40   # reports CQI every 40ms

############# Floorplan parameters ################
**.mobility.constraintAreaMaxX = 2000m
**.mobility.constraintAreaMaxY = 2000m
**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 250m
**.mobility.constraintAreaMinZ = 0m
**.mobility.constraintAreaMaxZ = 0m
**.mobility.initFromDisplayString = false

############### CA configuration ################# 
*.carrierAggregation.numComponentCarriers = 1
*.carrierAggregation.componentCarrier[0].numerologyIndex = ${u=0}
*.carrierAggregation.componentCarrier[0].carrierFrequency = 2GHz
*.carrierAggregation.componentCarrier[0].numBands = ${numRbs=2}

*.gnb*.cellularNic.numCarriers = 1
*.gnb*.cellularNic.channelModel[0].componentCarrierIndex = 0
*.ue[*].cellularNic.numCarriers = 1
*.ue[*].cellularNic.nrChannelModel[0].componentCarrierIndex = 0
*.gnb*.x2App[*].server.localPort = 5000 + ancestorIndex(1)

############### BS position #################
*.gnb1.mobility.initialX = 1000m
*.gnb1.mobility.initialY = 1000m

############## UE configuration ##################
*.numUe = ${numUEs=1}
**.ueIdOffset = ${repetition}*${numUEs}

*.numVidUe = ${numVidUes=1}
**.vidUeIdOffset = ${repetition}*${numVidUes}

*.ue[*].macCellId = 0
*.ue[*].masterId = 0
*.ue[*].nrMacCellId = 1
*.ue[*].nrMasterId = 1

*.VidUe[*].macCellId = 0
*.VidUe[*].masterId = 0
*.VidUe[*].nrMacCellId = 1
*.VidUe[*].nrMasterId = 1
#*.ue[*].nrMacCellId = intuniform(1,3) # randomly allocate the UEs to the NR cells
#*.ue[*].nrMasterId = intuniform(1,3)  # randomly allocate the UEs to the NR cells
**.dynamicCellAssociation = true
**.enableHandover = true

###### TRAFFIC SETINGS #####

# UE traffic settings for UDPBasicApp
**.ue[*].numApps = 1
**.ue[*].app[0].typename = "UdpBasicApp"
**.ue[*].app[0].messageLength = int(uniform(16B, 512B))    # Packet size for benign traffic
**.ue[*].app[0].sendInterval = exponential(1s)             # Interval between packets
**.ue[*].app[0].startTime = uniform(0s, 0.5s)  # Random start time for traffic
**.ue[*].app[0].destAddresses = "remoteServer"
#**.ue[0..99].app[0].destPort = 3000+ancestorIndex(1)
**.ue[*].app[0].destPort = 3000
**.ue[*].app[0].localPort = 9999
**.ue[*].app[0].finishTime = ${simtime}
#
## UE as receiver
#**.ue[*].app[1].typename = "CbrReceiver"
#**.ue[*].app[1].localPort = 5000
#
## RemoteServer as receiver
**.remoteServer.numApps = ${numUEs}
**.remoteServer.app[0..99].typename = "UdpEchoApp"
#**.remoteServer.app[0].localPort = 3000
**.remoteServer.app[*].localPort = 3000+ancestorIndex(0)
#

# VidUE settings
**.VidUe[*].numApps = 1
**.VidUe[*].app[0].typename = "UdpVideoStreamClient"
**.VidUe[*].app[0].serverPort = 4088
**.VidUe[*].app[0].serverAddress = "videoServer"
**.VidUe[*].app[0].localPort = 5555
**.VidUe[*].app[0].startTime = uniform(5s, 6s)

#*.VidUe[*].app[1].typename = "PingApp"
#*.VidUe[*].app[1].destAddr = "videoServer"
#*.VidUe[*].app[1].interface = "at"

*.**.verbose = true



# Video Server settings
**.videoServer.numApps = 1
**.videoServer.app[*].typename = "UdpVideoStreamServer"
**.videoServer.app[*].localPort = 4088
**.videoServer.app[*].sendInterval = 0.1s
**.videoServer.app[*].videoSize = 200MiB
**.videoServer.app[*].packetLen = 1KiB

**.mtu = 10000B


################ PCAP RECORDING ###################

*.configurator.dumpAddresses = true

**.crcMode = "computed"
**.fcsMode = "computed"

# videoRouter
#*.videoRouter.numPcapRecorders = 1
#*.videoRouter.pcapRecorder[*].pcapFile = "./results/THESIS/PCAP/videoRouter.pcap"
#*.videoRouter.pcapRecorder[*].moduleNamePatterns = "ipv4"
#*.videoRouter.pcapRecorder[*].dumpProtocols = "ipv4"

# remoteServer
#*.remoteServer.numPcapRecorders = 1
#*.remotesServer.pcapRecorder[*].pcapFile = "./results/PCAP/remoteServer.pcap"

# localRouter
*.localRouter.numPcapRecorders = 1
*.localRouter.pcapRecorder[*].pcapFile = "./results/THESIS/PCAP/localRouter.pcap"
*.localRouter.pcapRecorder[*].moduleNamePatterns = "ipv4"
*.localRouter.pcapRecorder[*].dumpProtocols = "ipv4"

######## MEC settings #######
### Connect the MEC to the 5G infrastructure ###
*.BoNeSiMec[*].macCellId = 0
*.BoNeSiMec[*].masterId = 0
*.BoNeSiMec[*].nrMacCellId = 1
*.BoNeSiMec[*].nrMasterId = 1


**.mecOrchestrator.mecHostList = ["BoNeSiMec"]
#**.mecOrchestrator.mecApplicationPackageList = ["WarningAlertApp_External"]
**.BoneSiMec.virtualisationInfrastructure.ipv4.forwarding = true
**.BoNeSiMec.mecPlatformManager.mecOrchestrator = "mecOrchestrator"
**.BoNeSiMec.bsList = ["gNodeB1"]
# resources available
*.BoNeSiMec.maxMECApps = 100												# max MEC Apps to instantiate
*.BoNeSiMec.maxRam = 4GB												# max KBytes of Ram Space
*.BoNeSiMec.maxDisk = 100TB												# max KBytes of Ram Space
*.BoNeSiMec.maxCpuSpeed = 400000		








